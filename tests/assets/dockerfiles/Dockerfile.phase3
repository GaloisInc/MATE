# Provides a minimal clean and correct build environment for Phase 3 challenges.
#
# This Dockerfile does NOT attempt to reproduce the runtime environment
# for actually running Phase 3 challenges.

# NOTE(ww): I tried minimizing some of these layers, but ran into broken
# package issues. They're probably fixable, but it wasn't worth the effort at the time.

FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive

RUN sed -i'' 's/archive\.ubuntu\.com/us\.archive\.ubuntu\.com/' /etc/apt/sources.list

RUN apt-get update -y && \
    apt-get install -qq -y --fix-missing build-essential tzdata clang-10 \
    clang++-10 flex bison pmccabe gdb strace libstdc++-8-dev

RUN apt-get install -qq -y --fix-missing libwrap0-dev libssl-dev libsasl2-dev
RUN apt-get install -qq -y --fix-missing groff groff-base libdb-dev net-tools openssh-server openssh-client vim
RUN update-alternatives --install /usr/bin/clang clang /usr/bin/clang-10 700 && \
    update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-10 700 && \
    update-alternatives --install /usr/bin/clang-cpp clang-cpp /usr/bin/clang-cpp-10 700

RUN apt-get install -qq -y --fix-missing make wget netcat curl unzip zlib1g-dev bzip2
RUN apt-get install -qq -y --fix-missing python3 python3-dev python3-pip

# Install Wine v -> wine-5.0
RUN apt-get install wine64 -y

RUN pip3 install pwntools

RUN apt-get install -qq -y --fix-missing python2

RUN apt-get install -y libjemalloc-dev

RUN apt-get install -y ldap-utils

RUN apt-get install -y libsqlite3-dev

RUN apt-get install -y php

RUN apt-get install -y libdlt2 libev4 libuv1 libwebsockets15
RUN apt-get install -y mosquitto

RUN pip3 install netifaces

RUN apt-get install -y automake autoconf pkgconf

RUN apt-get install -y libboost-all-dev cmake

RUN apt-get install -y libpcre3-dev libbsd-dev netcat-traditional less

RUN pip3 install dnspython

RUN wget -q -O- https://github.com/hugsy/gef/raw/master/scripts/gef.sh | sh

RUN apt-get install -y pkg-config

RUN apt-get install -y xsltproc

# NOTE(ww): I've added these build tools to build challenges without autotools,
# since the autotools-based builds that Apogee and Cromulence give us are
# consistently broken or unreliable.
RUN apt-get install -y meson scons
